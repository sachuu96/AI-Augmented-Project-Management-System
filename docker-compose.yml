version: "3.9"
services:
  postgres:
    image: postgres:16
    container_name: pg
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: app
      POSTGRES_PASSWORD: password
    ports: ["5432:5432"]
  
  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:v24.1.10
    container_name: redpanda
    command:
      [
        "redpanda",
        "start",
        "--overprovisioned",
        "--smp",
        "1",
        "--reserve-memory",
        "0M",
        "--check=false",
        "--advertise-kafka-addr", "redpanda:9092",
        "--advertise-rpc-addr", "redpanda:33145"
      ]
    ports:
      - "9092:9092"   # Kafka clients
      - "9644:9644"   # Admin API
  
  minio:
    image: minio/minio
    container_name: minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    ports: ["9000:9000", "9001:9001"]

  dynamodb:
      image: amazon/dynamodb-local
      container_name: dynamodb
      ports:
        - "8000:8000"
      command: "-jar DynamoDBLocal.jar -inMemory -sharedDb"

  dynamodb-admin:
    image: aaronshaf/dynamodb-admin
    container_name: dynamodb-admin
    ports:
      - "8001:8001"
    environment:
      DYNAMO_ENDPOINT: http://dynamodb:8000
    depends_on:
      - dynamodb

  # Shared package build
  shared:
    image: node:18
    working_dir: /app/shared
    volumes:
      - ./packages/shared:/app/shared
      - ./packages/shared/node_modules:/app/shared/node_modules
    command: npm run build
    profiles:
      - build

  # API Service (Producer only)
  api:
    image: node:18
    working_dir: /app/api
    volumes:
      - ./apps/api:/app/api
      - ./apps/api/node_modules:/app/api/node_modules
    command: npm run dev
    environment:
      DATABASE_URL: postgresql://postgres:password@pg:5432/app?schema=public
      DB_USER: postgres
      DB_HOST: pg
      DB_NAME: app
      DB_PASSWORD: password
      DB_PORT: 5432
      LOW_STOCK_THRESHOLD: 5
      KAFKA_BROKERS: redpanda:9092
      KAFKA_CLIENT_ID: api-service
      KAFKA_TRANSACTIONAL_ID: api-service-transaction
    depends_on:
      postgres:
        condition: service_started
      redpanda:
        condition: service_started
    ports:
      - "3000:3000"

  # Analytics Service
  analytics-service:
    image: node:18
    working_dir: /app/analytics
    volumes:
      - ./apps/analytics-service:/app/analytics
      - ./apps/analytics-service/node_modules:/app/analytics/node_modules
      - ./packages/shared/node_modules:/app/shared/node_modules
    command: sh -c "npm install && npm run dev"
    environment:
      KAFKA_BROKERS: redpanda:9092
      KAFKA_CLIENT_ID: analytics-service
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
      DYNAMO_ENDPOINT: http://dynamodb:8000
      AWS_ACCESS_KEY_ID: fake
      AWS_SECRET_ACCESS_KEY: fake
      RECENT_EVENTS_TABLE_NAME: RecentEvents
      ARCHIVE_BUCKET_NAME: event-archive
      HEALTH_PORT: 8080
    depends_on:
      redpanda:
        condition: service_started
      dynamodb:
        condition: service_started
      minio:
        condition: service_started
    ports:
      - "8080:8080"

  # Notifications Service
  notifications-service:
    image: node:18
    working_dir: /app/notifications
    volumes:
      - ./apps/notifications-service:/app/notifications
      - ./apps/notifications-service/node_modules:/app/notifications/node_modules
      - ./packages/shared/node_modules:/app/shared/node_modules
    command: sh -c "npm install && npm run dev"
    environment:
      KAFKA_BROKERS: redpanda:9092
      KAFKA_CLIENT_ID: notifications-service
      PORT: 3001
    depends_on:
      redpanda:
        condition: service_started
    ports:
      - "3001:3001"

  web:
    image: node:22
    working_dir: /app/web
    volumes:
      - ./apps/web:/app/web
      - ./apps/web/node_modules:/app/web/node_modules
    command: npm run dev -- --host 0.0.0.0
    environment:
      VITE_API_URL: http://localhost:3000
      VITE_SSE_URL: http://localhost:3001/events/stream
    depends_on:
      - api
      - notifications-service
    ports:
      - "5173:5173"